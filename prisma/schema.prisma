// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model AppUser {
  id         Int      @id @default(autoincrement())
  email      String   @unique @db.VarChar(255)
  pwhash     String   @db.VarChar(255)
  role_id    Int
  created_at DateTime @default(now())
  
  // Relations
  role       Role     @relation(fields: [role_id], references: [id], onDelete: Restrict)
  notes      Note[]
  
  @@map("app_user")

}

model Role {
  id          Int             @id @default(autoincrement())
  name        String          @unique @db.VarChar(50)
  
  // Relations
  users       AppUser[]
  permissions RolePermission[]
  
  @@map("role")
}

model Permission {
  id   Int             @id @default(autoincrement())
  name String          @unique @db.VarChar(100)
  
  // Relations
  roles RolePermission[]
  
  @@map("permission")
}

model RolePermission {
  role_id       Int
  permission_id Int
  
  // Relations
  role       Role       @relation(fields: [role_id], references: [id], onDelete: Cascade)
  permission Permission @relation(fields: [permission_id], references: [id], onDelete: Cascade)
  
  @@id([role_id, permission_id])
  @@map("role_permission")
}

model Note {
  id           Int      @id @default(autoincrement())
  content      String   @db.Text
  owner_id     Int
  access_level AccessLevel @default(PRIVATE)
  created_at   DateTime @default(now())
  updated_at   DateTime @default(now()) @updatedAt
  
  // Relations
  owner       AppUser   @relation(fields: [owner_id], references: [id], onDelete: Cascade)
  
  @@map("notes")
  @@index([owner_id], name: "idx_note_owner_id")

}

enum AccessLevel {
  PRIVATE
  PUBLIC
}